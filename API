Java 异常处理的五个关键字是什么？

      try catch finally throw throws
      
error 和 exception 有什么区别？
   
      error:提示错误信息
      exception:异常类提示
   
final、finally、finalize 的区别？
      
      final：
          修饰类，最终类不能被继承
          修饰方法 不能被重写，但可以被重载
          修饰变量变常量，得赋值
      finally：
          用在try catch 的后面，不管程序是否执行成功，都会执行finally
       finalize：
          inalize()是在java.lang.Object里定义的，也就是说每一个对象都有这么个方法。这个方法在gc启动，该对象被回收的时候被调用
          
          
******************************************************************String**********************************************************************
 
什么是String，它是什么数据类型？
      String是定义在 java.lang 包下的一个类。它不是基本数据类型。
      String是不可变的，JVM使用字符串池来存储所有的字符串对象。

String是不可变的有什么好处？
      由于String是不可变类，所以在多线程中使用是安全的，我们不需要做任何其他同步操作。
      String是不可变的，它的值也不能被改变，所以用来存储数据密码很安全。
    

装箱：就是自动将基本数据类型转换为包装器类型   int包装成Integer  float包装成Float
拆箱：就是自动将包装器类型转换为基本数据类型   int b=new Integer(10) //这是自动拆箱
  
注意：当定义的Integer的值大于-128-127之间不计较两个值是否相等时true如果不在这个范围内的false
  
String s = new String("abc") 创建了几个对象？
      
   2个对象 一个在堆内存中，一个在常量池中
         
String有什么特点
   
      String不可变，在使用String的时候尽量不使用+拼接
      String类是被final修饰的所以不能被继承

String、StringBuffer和StringBuilder都有什么区别？
      String是不可变的，连接效率低
      StringBuffer是可变的字符串类型，连接效率高于String线程安全
      StringBuilder是可变的字符类型，连接效率高于StringBuffer，线程不安全
      了解：线程安全和线程不安全要放在多线程安全下说
      
 问题：默认情况下扩容为原来容量的2倍+2，同时原有的数组中的元素赋值到新的数组
*****************************************************************集合*************************************************************************

ArrayList 与 LinkedList 的区别是什么？
  实现：ArraysList 是动态数组的数据结构实现，而LinkedList是双向链表的数据结构实现
  访问效率：ArraysList比LinkedList在随机访问的时候效率要高，因为LinkedList是线性的数据存储方式，所以需要移动指针从前往后依次查找
  增加和删除效率：在非首尾的增加和删除操作，LinkedList 要比 ArrayList 效率要高，因为 ArrayList 增删操作要影响数组内的其他数据的下标
  综合来说，在需要频繁读取集合中的元素中，使用ArraysList，而在插入和删除操作较多时，更推荐使用 LinkedList

集合Collection中存储的如果是自定义类的对象，需要自定义类重写哪个方法？为什么？
   Collection之容器的类的自定义对象的比较需要重写equals和hashCode方法
   保证对象的个别序列号唯一
   
ArrayList,LinkedList,Vector三者的相同点与不同点？
    三个类都实现了List接口，存储数据的特点相同，存储有序的，可重复的数据
   ArraysList：
                作为List的主要实现类
                线程不安全
                底层使用Object数组存储
                jdk6创建集合默认长度为10
                jdk7\8创建集合底层数组初始化一个空数组，第一次调用add方法才创建长度为10的数组
                在扩容方面是超过之前的长度，则扩展之前的长度为原来的1.5倍
                
   LinkedList：
                对于频繁的插入，删除操作，使用此类效率比ArraysList高；
                线程不安全，底层使用双向链表存储
                内部声明了Node类型的first和last属性，默认值为null
                调用add()方法将数据封装到Node中，创建了Node对象
                其中，Node定义为：体现了LinkedList的双向链表的说法
                private static class Node<E> { 
                
                E item; 
                Node<E> next;
                Node<E> prev; 
                
                Node(Node<E> prev, E element, Node<E> next) {
                
                this.item = element; 
                this.next = next; 
                this.prev = prev; 
                
                } }
                
    Vector：
                线程安全，效率低
                jdk7和jdk8中通过Vector构造器创建对象时，底层创建了长度为10的数组
                在扩容方面，默认扩容为原来的数组长度的2倍
                
Set存储数据的特点是什么？常见的实现类有什么？说明一下彼此的特点。

    特点：无序，不可重复
    HashSet：------- hashSet实现了HashMap键的维护
                 相对无序存储，不可以存储相同元素（排重），通过哈希表实现的集合
                 hashCode是Object中的方法，每个对象的hashCode值是唯一的，所以可以理解成hashCode值表示这个对象在内存中的位置
                 equlas()方法是Object中的方法，表示比较两个对象是否相等，若不重写相当于比较对象的地址值
