什么是多态？  多种状态
    1.重写和重载也是多态的表现。
    2.用子类给父类赋值父类对象指向子类
    3.用实现类给接口赋值用接口的对象指向实现类对象
  
   1） 向上类型转化（自动/隐式类型转化）  向上转型  是小类型转化成大类型   不存在风险  即子类型对象也是父类型  
    向下类型转化  向下转型（强制类型转化） 大类型转小类型  存在一定的风险的  多态实例化后 都可以向上类型转化 但是转化后 子类型对象  之间 相互转化就有有一定的风险
   2）instanceof 
      1)它的作用就是测试 它左边的对象是否是他右边的类的实例
      2)在java中  引用变量只能调用它编译时类型的方法而不能调用它运行时的方法即使他实际所引用的对象确实包括方法
        如果需要让这个引用变量来调用它运行时类型的方法，就必须使用强制类型转换把他转成运行时的类型。在强制转化的时候
	最有可能出现类型转化异常ClassCastException 规避这个异常利用 instanceof 关键字来判断是否是本类的对象
	如果成立在进行强制类型转化。
   3）匿名对象
      3.1 匿名对象是指创建对象只有创建对象的语句  却没有把对象的地址的值赋给某个变量。
      3.2匿名对象的特点  创建匿名对象直接使用  没有变量名
      3.3匿名对象的使用  new 对象().方法名  匿名对象只能使用一次 想要再次调用对象的其他方法时需要重新new
      3.4匿名对象可以作为方法接收的参数，方法的返回值使用